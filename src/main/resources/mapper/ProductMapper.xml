<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myshop.mapper.ProductMapper">

    <resultMap id="ProductResultMap" type="com.myshop.model.Product">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="description" column="description" />
        <result property="price" column="price" />
        <result property="stock" column="stock" />
        <result property="imageUrl" column="image_url" />
        <result property="status" column="status" /> <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <select id="findById" resultMap="ProductResultMap" parameterType="long">
        SELECT * FROM products
        WHERE id = #{id} AND status != 'DELETED' </select>

    <select id="findByName" resultMap="ProductResultMap" parameterType="string">
        SELECT * FROM products
        WHERE name = #{name} AND status != 'DELETED'</select>

    <select id="findAll" resultMap="ProductResultMap">
        SELECT *
        FROM products
        WHERE status != 'DELETED' </select>

    <select id="findProductsForUpdate" resultMap="ProductResultMap">
        SELECT * FROM products
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
        FOR UPDATE
    </select>

    <insert id="insertProduct" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO products (name, description, price, stock, image_url, status)
        VALUES (#{name}, #{description}, #{price}, #{stock}, #{imageUrl}, #{status})
    </insert>

    <update id="updateProduct">
        UPDATE products
        SET name = #{name},
            description = #{description},
            price = #{price},
            stock = #{stock},
            image_url = #{imageUrl},
            status = #{status}
        WHERE id = #{id}
    </update>

    <update id="softDeleteById">
        UPDATE products 
        SET status = 'DELETED' 
        WHERE id = #{id}
    </update>

    <update id="decreaseStock">
        UPDATE products
        SET stock = stock - #{quantity}
        WHERE id = #{productId} AND stock >= #{quantity}
    </update>
    
</mapper>